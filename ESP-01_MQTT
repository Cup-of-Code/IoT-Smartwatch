/*
Code adapted from: https://github.com/knolleary/pubsubclient/blob/master/examples/mqtt_esp8266/mqtt_esp8266.ino

 To install the ESP8266 board, (using Arduino 1.6.4+):
  - Add the following 3rd party board manager under "File -> Preferences -> Additional Boards Manager URLs":
       http://arduino.esp8266.com/stable/package_esp8266com_index.json
  - Open the "Tools -> Board -> Board Manager" and click install for the ESP8266"
  - Select your ESP8266 in "Tools -> Board"
*/

#include <ESP8266WiFi.h>
#include <PubSubClient.h>

// Update these with values suitable for your network.

const char* ssid = "<your_ssid>";
const char* password = "<password>";
const char* mqtt_server = "<mqtt_host_ip>";
const char* mqtt_username = "<mqtt_username>";
const char* mqtt_password = "<mqtt_password>";

String clientId = "ESP8266Client-";


WiFiClient espClient;
PubSubClient client(espClient);
unsigned long lastMsg = 0;
#define MSG_BUFFER_SIZE	(50)
char msg[MSG_BUFFER_SIZE];
int value = 0;

void setup_wifi() {

  delay(10);
  // We start by connecting to a WiFi network
  Serial.println();
  Serial.print("Connecting to ");
  Serial.println(ssid);

  WiFi.mode(WIFI_STA);
  WiFi.begin(ssid, password);

  while (WiFi.status() != WL_CONNECTED) {
    delay(500);
    Serial.print(".");
  }

  randomSeed(micros());

  Serial.println("");
  Serial.println("WiFi connected");
  Serial.println("IP address: ");
  Serial.println(WiFi.localIP());
}

void callback(char* topic, byte* payload, unsigned int length) {
  Serial.print(topic);
  for (int i = 0; i < length; i++) {
    Serial1.print((char)payload[i]);
    Serial1.print((char)payload[i]);
  }
  Serial1.println();
  Serial.println();


}

void reconnect() {
  while (!client.connected()) {
 
    if (client.connect(clientId.c_str(), mqtt_username, mqtt_password)) {
        //do nothing
    } else {
      Serial.print("failed, rc=");
      Serial.print(client.state());
      Serial.println(" try again in 5 seconds");
      delay(5000);
    }
  }
}  


void setup() {
  Serial.begin(115200);
  setup_wifi();
  client.setServer(mqtt_server, 1883);
  client.setCallback(callback);
  clientId += String(random(0xffff), HEX);
  while (!client.connected()) {
    Serial.print("Attempting MQTT connection...");
   
    if (client.connect(clientId.c_str(), mqtt_username, mqtt_password)) {
      client.subscribe("inTopic");
    }

  }
}

void loop() {
  if (!client.connected()) {
    reconnect();
  }
  client.loop();
  
  while (Serial1.available()) {
    // Read data from the Serial1 UART interface
    String payload = Serial1.readStringUntil('\n');
  
    // Publish data to the MQTT broker
    client.publish("outTopic", payload.c_str());
  }
 
  while (Serial.available()) {
    // Read data from the Serial1 UART interface
    String payload = Serial.readStringUntil('\n');
  
    // Publish data to the MQTT broker
    client.publish("outTopic", payload.c_str());
  }

  delay(2000);
 
 
}
